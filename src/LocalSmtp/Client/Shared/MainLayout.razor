@inherits LayoutComponentBase
@inject HttpClient Http
@inject ILocalStorageService LocalStore
@using Blazored.LocalStorage

<MudThemeProvider @bind-IsDarkMode="@_isDarkMode" Theme="_theme"/>
<MudDialogProvider />
<MudSnackbarProvider />

<MudLayout>
  <MudAppBar>
    <MudText>Local Smtp</MudText>
    <div class="application-version">
      <MudText Typo="Typo.caption">@Info?.InfoVersion</MudText>
    </div>
    <MudSpacer />
    <MudButton StartIcon="@Icons.Material.Filled.Email" Color="Color.Inherit" Href="messages">Messages</MudButton>
    <MudButton StartIcon="@Icons.Material.Filled.PunchClock" Color="Color.Inherit" Href="sessions">Sessions</MudButton>
    <MudSpacer />
    <div class="smtp-port-info">
      <MudText Typo="Typo.caption">SMTP server listening on port @Server?.PortNumber</MudText>
    </div>
    <MudButton StartIcon="@Icons.Material.Filled.Settings" Color="Color.Inherit" Href="settings/smtp">Settings</MudButton>
    <MudToggleIconButton ToggledIcon="@Icons.Material.Filled.LightMode" Icon="@Icons.Material.Filled.DarkMode" ToggledChanged="OnThemeToggleAsync" Color="Color.Inherit" Title="Dark Mode" ToggledTitle="Light Mode"></MudToggleIconButton>
  </MudAppBar>
  <MudMainContent>
      @Body
  </MudMainContent>
</MudLayout>

@code {

  private Server? Server = default!;
  private Info? Info = default!;
  private bool _isDarkMode;
  private MudTheme _theme = new();

  protected override async Task OnInitializedAsync()
  {
    Server = await LocalStore.GetItemAsync<Server>("smtpInfo");
    _isDarkMode = await LocalStore.GetItemAsync<bool>("isDarkMode");

    if (Server == null)
    {
      Server = await Http.GetFromJsonAsync<Server>("/api/Server");
      await LocalStore.SetItemAsync<Server>("smtpInfo", Server!);
    }

    Info = await LocalStore.GetItemAsync<Info>("serverInfo");

    if (Info == null)
    {
      Info = await Http.GetFromJsonAsync<Info>("/api/Info");
      await LocalStore.SetItemAsync<Info>("serverInfo", Info!);
    }
  }

  private async Task OnThemeToggleAsync()
  {
    _isDarkMode = !_isDarkMode;
    await LocalStore.SetItemAsync("isDarkMode", _isDarkMode);
  }
}
