@inject HttpClient httpClient
@inject IJSRuntime JSRuntime

  @if (Message == null)
  {
    <MudSkeleton />
    <MudSkeleton />
    <MudSkeleton />
  }
  else
  {
    <MudButton Class="absolute overflow-hidden" style="float: right; margin-bottom: -37px;" StartIcon="@Icons.Material.Filled.FileDownload" Variant="Variant.Filled" Disabled="@(Message == null)" OnClick="DownloadAsync">Download .eml</MudButton>
    <MudGrid>
      <MudItem xs="12">
        <MudGrid Justify="Justify.FlexStart">
          <MudItem xs="1">From:</MudItem>
          <MudItem xs="11">@Message.From</MudItem>
        </MudGrid>
      </MudItem>
      <MudItem xs="12">
        <MudGrid>
          <MudItem xs="1">To:</MudItem>
          <MudItem xs="11">@Message.To</MudItem>
        </MudGrid>
      </MudItem>
      <MudItem xs="12">
        <MudGrid>
          <MudItem xs="1">Subject:</MudItem>
          <MudItem xs="11">@Message.Subject</MudItem>
        </MudGrid>
      </MudItem>
      <MudItem xs="12" Class="d-flex flex-row">
          <MudItem xs="1">Secure:</MudItem>
          <MudItem xs="11">@Message?.SecureConnection.ToString()</MudItem>
      </MudItem>
      <MudItem xs="12">
        <MudTabs Class="tab-tabs-fixed-height" Elevation="2" Rounded="true" ApplyEffectsToContainer="true" PanelClass="pa-3">
          <MudTabPanel Text="Body">
            <MessageBodyView HtmlMessage="@HtmlMessage" DecreaseHeight="375"></MessageBodyView>
          </MudTabPanel>
          <MudTabPanel Text="Headers">
            <MessageHeaders Message="@Message" DecreaseHeight="400"></MessageHeaders>
          </MudTabPanel>
          <MudTabPanel Text="Parts">
            <MessageParts Message="@Message"></MessageParts>
          </MudTabPanel>
          <MudTabPanel Text="Source">
            <MessageSource RawMessage="@RawMessage" DecreaseHeight="375"></MessageSource>
          </MudTabPanel>
        </MudTabs>
      </MudItem>
    </MudGrid>
  }

@code {

  [Parameter]
  public Message? Message { get; set; }

  [Parameter]
  public string? HtmlMessage { get; set; }

  [Parameter]
  public string? RawMessage { get; set; }

  private async Task DownloadAsync()
  {
    await JSRuntime.InvokeVoidAsync("downloadFromUrl", new {Url = $"api/messages/{Message.Id}/download", FileName = "foo.jpeg"});
  }
}

<style>
  .mud-grid-spacing-xs-3 > .mud-grid-item {
      padding: 10px;
  }

  .tab-tabs-fixed-height {
    height: calc(100vh - 301px);
  }
</style>